{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["pageQuery","ArchivePage","data","posts","allMarkdownRemark","edges","labels","site","siteMetadata","title","keywords","className","map","post","tags","node","frontmatter","key","id","to","fields","slug","date","excerpt","techTags","forEach","tag","i","label","push","tech","name","size","color","getTechTags"],"mappings":"wRAoEaA,EAAS,aAwCPC,UAlGK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAQD,EAAKE,kBAAkBC,MAC/BC,EAASJ,EAAKK,KAAKC,aAAaF,OAgBtC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,UAAUC,SAAU,CAAC,SAAD,2DAC/B,yBAAKC,UAAU,cACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,gBAAd,aACCR,EAAMS,KAAI,SAACC,GACV,IAAMC,EAAOD,EAAKE,KAAKC,YAAYF,KACnC,OACE,yBAAKG,IAAKJ,EAAKE,KAAKG,GAAIP,UAAU,kBAChC,kBAAC,OAAD,CACEQ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,aAEV,wBAAIA,UAAU,SAASE,EAAKE,KAAKC,YAAYP,QAE/C,2BAAOE,UAAU,qBAAoB,wCAAcE,EAAKE,KAAKC,YAAYM,OAEzE,uBAAGX,UAAU,iBAAiBE,EAAKE,KAAKQ,SACxC,kBAAC,OAAD,CACEJ,GAAIN,EAAKE,KAAKK,OAAOC,KACrBV,UAAU,gBAEV,2BAAOA,UAAU,uBAAjB,oBAEF,yBAAKA,UAAU,WA1CT,SAACG,GACnB,IAAMU,EAAW,GASjB,OARAV,EAAKW,SAAQ,SAACC,EAAKC,GACjBrB,EAAOmB,SAAQ,SAACG,GACVF,IAAQE,EAAMF,KAChBF,EAASK,KAAK,kBAAC,IAAD,CAASZ,IAAKU,EAAGD,IAAKE,EAAMF,IAAKI,KAAMF,EAAME,KAAMC,KAAMH,EAAMG,KAAMC,KAAMJ,EAAMI,KACxEC,MAAOL,EAAMK,eAInCT,EAiCQU,CAAYpB","file":"component---src-pages-archive-js-5b79f1dfbdfa56741336.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"./index.css\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Sidebar from \"../components/sidebar/Sidebar\"\nimport TechTag from \"../components/tags/TechTag\"\n\nconst ArchivePage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  const labels = data.site.siteMetadata.labels\n\n  const getTechTags = (tags) => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach((label) => {\n        if (tag === label.tag) {\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size}\n                                 color={label.color}/>)\n        }\n      })\n    })\n    return techTags\n  }\n\n\n  return (\n    <Layout>\n      <SEO title=\"Archive\" keywords={[`gatsby`, `javascript`, `react`, `web development`, `blog`, `graphql`]}/>\n      <div className=\"index-main\">\n        <div className=\"sidebar px-4 py-2\">\n          <Sidebar/>\n        </div>\n        <div className=\"post-list-main\">\n          <h2 className=\"heading mt-3\">All Posts</h2>\n          {posts.map((post) => {\n            const tags = post.node.frontmatter.tags\n            return (\n              <div key={post.node.id} className=\"container mt-5\">\n                <Link\n                  to={post.node.fields.slug}\n                  className=\"text-dark\"\n                >\n                  <h2 className=\"title\">{post.node.frontmatter.title}</h2>\n                </Link>\n                <small className=\"d-block text-info\"><i>Posted on {post.node.frontmatter.date}</i>\n                </small>\n                <p className=\"mt-3 d-inline\">{post.node.excerpt}</p>\n                <Link\n                  to={post.node.fields.slug}\n                  className=\"text-primary\"\n                >\n                  <small className=\"d-inline-block ml-3\"> Read full post</small>\n                </Link>\n                <div className=\"d-block\">\n                  {getTechTags(tags)}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n    query ArchiveQuery {\n        site {\n            siteMetadata {\n                title\n                author\n                labels {\n                    tag\n                    tech\n                    name\n                    size\n                    color\n                }\n            }\n        }\n        allMarkdownRemark(\n            limit: 1000\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { published: { eq: true } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    excerpt(pruneLength: 200)\n                    html\n                    id\n                    frontmatter {\n                        title\n                        date(formatString: \"MMMM DD, YYYY\")\n                        tags\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default ArchivePage\n\n"],"sourceRoot":""}