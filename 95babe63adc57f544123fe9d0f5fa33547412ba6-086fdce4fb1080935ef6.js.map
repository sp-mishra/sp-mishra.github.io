{"version":3,"sources":["webpack:///./src/components/sidebar/Bio.js","webpack:///./src/components/sidebar/SocialLinks.js","webpack:///./src/components/sidebar/TechTags.js","webpack:///./src/components/sidebar/Sidebar.js","webpack:///./src/components/tags/TechTag.js"],"names":["Bio","author","tagline","className","src","logo","style","maxWidth","alt","SocialLinks","contacts","href","linkedin","title","size","color","github","stackoverflow","freecodecamp","twitter","TechTags","props","labels","posts","tags","map","label","count","forEach","post","node","frontmatter","includes","tag","filter","category","techTags","i","push","TechTag","key","tech","name","getTechTags","Sidebar","query","render","data","site","siteMetadata","to","activeStyle","textDecoration","allMarkdownRemark","edges","fontSize","role","viewBox","xmlns","width","height","fill","d"],"mappings":"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","file":"95babe63adc57f544123fe9d0f5fa33547412ba6-086fdce4fb1080935ef6.js","sourcesContent":["import React from \"react\"\nimport \"./sidebar.css\"\n\nimport logo from \"../../images/logo.png\"\n\nconst Bio = ({ author, tagline }) => {\n\n  return (\n    <div className=\"bio-main w-75\">\n      <img src={logo} style={{ maxWidth: `100px` }} className=\"profile-img\" alt=\"\"/>\n      <h3 className=\"mt-2 author-bio\">{author}</h3>\n      <small className=\"text-muted\">{tagline}</small>\n    </div>\n  )\n}\n\nexport default Bio","import React from \"react\"\nimport { FaFreeCodeCamp, FaGithubSquare, FaLinkedin, FaStackOverflow, FaTwitterSquare } from \"react-icons/fa\"\nimport \"./sidebar.css\"\n\n\nconst SocialLinks = ({ contacts }) => {\n  return (\n    <div className=\"side-social-links float-left mt-3 mb-3\">\n      <a className=\"text-secondary p-2\"\n         href={contacts.linkedin}>\n                <span title=\"Linked In\">\n                    <FaLinkedin size={26} style={{ color: \"secondary\" }}/>\n                </span>\n      </a>\n      <a className=\"text-secondary p-2\"\n         href={contacts.github}>\n                <span title=\"GitHub\">\n                    <FaGithubSquare size={26} style={{ color: \"secondary\" }}/>\n                </span>\n      </a>\n      <a className=\"text-secondary p-2\"\n         href={contacts.stackoverflow}>\n                <span title=\"Stack Overflow\">\n                    <FaStackOverflow size={26} style={{ color: \"secondary\" }}/>\n                </span>\n      </a>\n      <a className=\"text-secondary p-2\"\n         href={contacts.freecodecamp}>\n                <span title=\"freeCodeCamp\">\n                    <FaFreeCodeCamp size={26} style={{ color: \"secondary\" }}/>\n                </span>\n      </a>\n      <a className=\"text-secondary p-2\"\n         href={contacts.twitter}>\n                <span title=\"Twitter\">\n                    <FaTwitterSquare size={26} style={{ color: \"secondary\" }}/>\n                </span>\n      </a>\n    </div>\n  )\n}\n\nexport default SocialLinks","import React from \"react\"\n\nimport TechTag from \"../tags/TechTag\"\n\nconst TechTags = (props) => {\n  const labels = props.labels\n  const posts = props.posts\n\n  const labelCount = labels.map(label => {\n    let count = 0\n    posts.forEach(post => {\n      if (post.node.frontmatter.tags.includes(label.tag)) {\n        count = count + 1\n      }\n    })\n    return [label.tag, count]\n  })\n\n  const categories = labelCount.filter(label => {\n    return label[1] > 0\n  })\n\n  const tags = categories.map(category => {\n    return category[0]\n  })\n\n\n  const getTechTags = (tags) => {\n    const techTags = []\n    tags.forEach((tag, i) => {\n      labels.forEach((label) => {\n        if (tag === label.tag) {\n          techTags.push(<TechTag key={i} tag={label.tag} tech={label.tech} name={label.name} size={label.size}\n                                 color={label.color}/>)\n        }\n      })\n    })\n    return techTags\n  }\n\n\n  return (\n    <>\n      <h4>Tech Topics</h4>\n      <div className=\"d-block\">\n        {getTechTags(tags)}\n      </div>\n    </>\n  )\n}\n\n\nexport default TechTags","import React from \"react\"\nimport { graphql, Link, StaticQuery } from \"gatsby\"\nimport Bio from \"./Bio\"\nimport \"./sidebar.css\"\n\nimport SocialLinks from \"./SocialLinks\"\nimport TechTags from \"./TechTags\"\n\n\nconst Sidebar = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n                query SiteBioQuery {\n                    site {\n                        siteMetadata {\n                            title\n                            tagline\n                            author\n                            contacts {\n                                linkedin\n                                github\n                                stackoverflow\n                                freecodecamp\n                                twitter\n                            }\n                            labels {\n                                tag\n                                tech\n                                name \n                                size \n                                color\n                            }\n                        }\n                    }\n                    allMarkdownRemark(\n                        limit: 10\n                        sort: { fields: [frontmatter___date], order: DESC }\n                        filter: { frontmatter: { published: { eq: true } } }\n                    ) {\n                        edges {\n                            node {\n                                frontmatter {\n                                    tags\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n      render={data => (\n        <>\n          <div className=\"sidebar-main border-right\">\n            <Bio author={data.site.siteMetadata.author} tagline={data.site.siteMetadata.tagline}/>\n            <SocialLinks contacts={data.site.siteMetadata.contacts}/>\n            <div className=\"page-links\">\n              <Link to=\"/\"\n                    activeStyle={{ textDecoration: \"salmon double underline\" }}>\n                <span className=\"text-dark d-block py-1\">Blog Home</span>\n              </Link>\n              <Link to=\"/about\"\n                    activeStyle={{ textDecoration: \"salmon double underline\" }}>\n                <span className=\"text-dark d-block py-1\">About</span>\n              </Link>\n              <Link to=\"/archive\"\n                    activeStyle={{ textDecoration: \"salmon double underline\" }}>\n                <span className=\"text-dark d-block py-1\">Archive</span>\n              </Link>\n              <Link to=\"/projects\"\n                    activeStyle={{ textDecoration: \"salmon double underline\" }}>\n                <span className=\"text-dark d-block py-1\">Projects</span>\n              </Link>\n            </div>\n            <div className=\"tech-tags mt-4\">\n              <TechTags labels={data.site.siteMetadata.labels} posts={data.allMarkdownRemark.edges}/>\n            </div>\n          </div>\n        </>\n      )}\n    />\n  )\n}\n\nexport default Sidebar","import React from \"react\"\n\nimport \"./tags.css\"\nimport { Link } from \"gatsby\"\n\nconst TechTag = (props) => {\n  const { tag, tech, name, size, color } = props\n\n  return (\n    <div className=\"d-inline-block p-1\">\n      <Link to={`/tags/${tag}/`}>\n        <button\n          className=\"tech-tag text-white\">\n          <p className=\"d-inline\">{tech} </p>\n          <div className=\"d-inline\" style={{ fontSize: size, color: color }}>\n            <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" width={size} height={size}\n                 style={{ fill: `${color}` }}>\n              <title>{tech}</title>\n              <path\n                d={name}/>\n            </svg>\n          </div>\n        </button>\n      </Link>\n\n    </div>\n\n  )\n}\n\nexport default TechTag"],"sourceRoot":""}